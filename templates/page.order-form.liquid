{% comment %}
Source: https://gist.github.com/carolineschnapp/9122054
Customized by: Michael X
{% endcomment %}

<!-- Vue -->
<script src="https://cdn.jsdelivr.net/npm/vue@2.6.10/dist/vue.js"></script>

<div id="app" class="vue-form">

  <!-- Form Header ----------------------------------------------------------->
  <header class="collection-header">
    <div class="page-width">
      <div class="section-header text-center">
        <h1>${header}</h1>
      </div>
    </div>
  </header>


<!-- <form action="/cart" method="post"> -->
<form
  id="orderForm"
  ref="orderForm"
  method="POST" v-on:submit.prevent="submitForm">

  <template v-if="testProducts.length > 0">

    <!-- Product Table ------------------------------------------------------->
    <table class="custom-order-form">

      <!-- Table Headers ----------------------------------------------------->
      <thead>
        <tr
          style="
            display: grid;
            grid-template-columns: 100px 1fr 100px 200px 1fr 100px;
            grid-template-rows: 1fr;
          "
        >
          <th>Preview</th>
          <th>Name</th>
          <th>Price</th>
          <th>Engraving</th>
          <th class="product-header-donate">Donate</th>
          <th class="product-header-quantity">Quantity</th>
        </tr>
      </thead>

      <!-- Body ---------------------------------------------------------------->
      <tbody ref="formBody">
        <template v-for="product in testProducts">

          <template v-if="product.available">
            <template v-for="variant in product.variants">
              <template v-if="variant.available">
                <tr
                  class="{% cycle 'pure-table-odd', '' %}"
                  style="
                    display: grid;
                    grid-template-columns: 100px 1fr 100px 200px 1fr 100px;
                    grid-template-rows: 1fr;
                  "
                >

                  <!-- Preview Image ----------------------------------------->
                  <td class="product-preview">
                    <img
                      :src="product.featured_image"
                      @click="goToProduct(variant.url)"
                    />
                  </td>

                  <!-- Title ------------------------------------------------->
                  <td
                    class="product-title"
                    @click="goToProduct(variant.url)"
                  >
                     ${product.title}
                    <template v-if="!variant.title.includes('Default')">
                      - ${variant.title}
                    </template>
                    <template v-if="variant.sku">
                      - ${variant.sku}
                    </template>
                  </td>

                  <!-- Price ------------------------------------------------->
                  <td class="product-price">
                     ${variant.price}
                  </td>


                  <!-- Custom Engraving (optional) --------------------------->
                  {% if settings.engraving_enabled == 'yes' %}
                  <td class="product-engraving">
                    <p
                      class="line-item-property__field"
                      style="width: 100%;"
                    >
                      <input
                        type="text"
                        :ref="'engraving--'+variant.id"
                        :name="'engraving--'+variant.id"
                        style="padding: 10px; width: 100%;"
                      >
                    </p>
                  </td>
                  {% endif %}

                  <!-- Donate To SickKids (required) ------------------------->
                  {% if settings.donate_enabled == 'yes' %}
                  <td class="product-donate">
                    <p
                      class="line-item-property__field"
                      style="margin: 0;"
                    >
                      <label
                        style="
                          display: flex;
                          flex-direction: row;
                          align-items: center;
                        "
                      >
                        {{ settings.donate_organization}}
                        ({{ settings.donate_percentage}}%)
                      </label>

                      <div
                        style="
                          display: flex;
                        "
                      >

                        <label
                          class="custom-input-group"
                          style="margin-right: 10px;"
                        >
                          <input
                            class="required"
                            type="radio"
                            :name="variant.donateName"
                            value="yes"
                          >
                          <span>Yes</span>
                        </label>

                        <label class="custom-input-group">
                          <input
                            class="required"
                            type="radio"
                            :name="variant.donateName"
                            value="no"
                          >
                          <span>No</span>
                        </label>
                      </div>
                    </p>
                  </td>
                  {% endif %}

                  <td class="product-quantity">

                    <!-- :name="variant.quantityName" -->
                    <!-- onfocus="this.select()" -->
                    <!-- class="quantity field" -->

                    <!-- ${variant.id} -->

                    {% capture my_variable %}
                      form["${variant.id}"].quantity
                    {% endcapture %}

                    <input
                      name="updates[]"
                      {% unless variant.inventory_management == blank or variant.inventory_policy == 'continue' %}
                        max="{{ variant.inventory_quantity }}"
                      {% endunless %}
                      type="number"
                      tabindex="1"
                    />
                  </td>



                </tr>
              </template>
            </template>
          </template>


          <!-- <div>${product.available}</div>
          <div>${product.name}</div>
          <div>${product.variants}</div> -->
        </template>
      </tbody>

    </table>

    <!-- Actions --------------------------------------------------------------->
    <div
      style="
        display: flex;
        align-items: center;
        justify-content: flex-end;
        padding: 20px;
      "
    >
      <input
        type="submit"
      >
        Add To Cart
      </input>
    </div>


  </template>

  <template v-else>
    <p>There are no products in this view.</p>
  </template>

</form>






</div>

{% assign collection = collections.all %}

{% paginate collection.products by 100 %}

</div>
{% endpaginate %}

<!-- Vue --------------------------------------->
<script>

  // Build array of products from liquid collection
  var myProducts = []

  {% for product in collection.products %}
    var object = {}
    object.id = "{{ product.id }}"
    object.available = "{{ product.available }}"
    object.featured_image =  "//cdn.shopify.com/s/files/1/0063/1770/3239/" + "{{ product.featured_image }}"
    object.variants = []
    object.title = "{{ product.title }}"
    myProducts.push(object)

    // Variants
    {% for variant in product.variants %}

      var variantObject = {}
      variantObject.id = "{{ variant.id }}"
      variantObject.available = "{{ variant.available }}"
      variantObject.url =  "//cdn.shopify.com/s/files/1/0063/1770/3239/" + "{{ variant.url }}"
      variantObject.featured_image = "{{ variant.featured_image }}"
      variantObject.title = "{{ variant.title }}"
      variantObject.sku = "{{ variant.sku }}"
      variantObject.price = "{{ variant.price | money}}"

      variantObject.engravingName = 'properties' + '[Custom Engraving]' + "[{{variant.id}}]"
      
      variantObject.donateName = 'properties' + "[{{variant.id}}]" + '[Donate]'

      variantObject.quantityName = 'updates' + "[{{variant.id}}]"
      object.variants.push(variantObject)

      // properties %5B17141988589639 %5D %5B Custom+Engraving %5D: 
      // updates %5B17141988589639 %5D: 4
    {% endfor %}

  {% endfor %}

  //-- Form -------------------------------------
  var form = new Vue({

    delimiters: ['${', '}'],
    el: '#app',

    created() {
      const products = this.testProducts
      const variants = []
      products.forEach(product => {
        product.variants.forEach(variant => {
          variants.push(variant)
        })
      })

      // console.log(variants)

      let form = variants.map(variant => {
        return {
          id: variant.id,
          quantity: 2,
          properties: {
            'Custom Engraving': 'Caroline',
            'Donate': 'no'
          }
        }
      })

      // console.log(form)

      this.form = form

    },

    data() {
      return {
        header: 'Bulk Order Form',
        testProducts: myProducts
      }
    },

    methods: {
      goToProduct(url) {

        let base = 'https://devs-beyond-borders.myshopify.com'
        window.location.href = base + url

      },

      submitForm(event) {
        // console.log(event)
        // var orderForm = document.getElementById("orderForm");
        // var formData = new FormData(orderForm);
        // console.log(orderForm)
        // console.log(formData.entries())

        // gather form data
        // create request payloads

        // let data = {
        //   id: 17141988720711,
        //   quantity: 7
        // }

        // // POST payloads
        const form = this.form
        // console.log(this.$refs.formBody)


        console.log(JSON.stringify(this.$refs.formBody))
        // console.log(form)
        // console.log(this.$refs)
        // console.log(this.$refs['engraving--17141987704903'].value)

        // const refs = this.$refs.toArray()

        // refs.forEach(ref => {
        //   console.log(Object.keys(ref))
        // })

        // const data = this.form[0]

        // let url = '/cart/add.js'

        // // Default options are marked with *
        // return fetch(url, {
        //     method: 'POST', // *GET, POST, PUT, DELETE, etc.
        //     mode: 'cors', // no-cors, cors, *same-origin
        //     cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
        //     credentials: 'same-origin', // include, *same-origin, omit
        //     headers: {
        //         'Content-Type': 'application/json',
        //         // 'Content-Type': 'application/x-www-form-urlencoded',
        //     },
        //     redirect: 'follow', // manual, *follow, error
        //     referrer: 'no-referrer', // no-referrer, *client
        //     body: JSON.stringify(data), // body data type must match "Content-Type" header
        // })
        // .then(response => {
        //   // response.json()
        //   // console.log(response.json())
        // }); // parses JSON response into native Javascript objects
      }




    }


  })

  Vue.component('productRow',{template: '<p>Hello I am A</p>'})


  const productRow = new Vue({
    el: "#productRow"
  })

</script>


































{% if collection.products_count > 0 %}
  <!-- <script>
  jQuery(function($) {
    $('table .quantity:first').focus();
    $('[max]').change(function() {
      var max = parseInt($(this).attr('max'), 10);
      var value = parseInt($(this).val(), 10) || 0;
      if (value > max) {
        alert('We only have ' + max + ' of this item in stock');
        $(this).val(max);
      }
    });
  });
  </script> -->
{% endif %}